#================================================
#set
se1=set()
print(se1)
print(type(se1))
#add
se1=set()
a=se1.add(10)
print(se1)
#creating set with elements using set()
se1=set([1,2,3,4,'rahul'])
print(se1)
print(type(se1))
#isdisjoint
s1={1,2,3}
s2={4,5,6}
a=s1.isdisjoint(s2)
print(a)
#
#=========================================
#issubset
se1={1,2,3,4,5}
se2={1,2,3}
a=se1.issubset(se2)
print(a)
se1={1,2,3,4,5}
se2={1,2,3}
a=se2.issubset(se1)
print(a)
se1={1,2,3,4,5}
se2={1,2,3}
a=se1.issubset(se2)
print(a)
se1={1,2,3,4,5}
se2={1,2,3}
a=se1<=(se2)
print(a)
se1={1,2,3,4,5}
se2={1,2,3}
a=se2<=(se1)
print(a)
#superset
se1={1,2,3,4,5}
se2={1,2,3}
a=se1.issuperset(se2)
print(a)
se1={1,2,3,4,5}
se2={1,2,3}
a=se2.issuperset(se1)
print(a)
se1={1,2,3,4,5}
se2={1,2,3}
a=se1>=(se2)
print(a)
#We can also check the elements whether they belong to set or not,
se1 = {1, 2, 3, "Python", 3 + 5j, 8}
print(1 in se1)
se1 = {1, 2, 3, "Python", 3 + 5j, 8}
print(5 not in se1)
#union
se1={1,2,3,4,5}
se2={1,2,3,6,7}
a=se1.union(se2)
print(a)
se1={1,2,3,4,5}
se2={1,2,3,6,7}
a=se2.union(se1)
print(a)
se1={1,2,3,4,5}
se2={1,2,3,6,7}
print(se1|(se2))
#intersection
se1={1,2,3,4,5}
se2={1,2,3,6,7}
a=se1.intersection(se2)
print(a)
se1={1,2,3,4,5}
se2={1,2,3,6,7}
a=se1&(se2)
print(a)
#difference
se1={1,2,3,4,5}
se2={1,2,3,6,7}
a=se1.difference(se2)
print(a)
se1={1,2,3,4,5}
se2={1,2,3,6,7}
a=se2.difference(se1)
print(a)
se1={1,2,3,4,5}
se2={1,2,3,6,7}
a=se1-(se2)
print(a)
#intersection-update
se1={1,2,3,4,5}
se2={1,2,3,6,7}
a=se1.intersection_update(se2)
print(se2)
#difference-update
se1={1,2,3,4,5}
se2={1,2,3,6,7}
se1.difference-update(se2)
print(se1)
#symmetric-difference
se1={1,2,3,4,5}
se2={1,2,3,6,7}
a=se1.symmetric_difference(se2)
print(a)


